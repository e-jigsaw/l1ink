---
interface Props {
  id: string;
}
const { id } = Astro.props;
---

<div class="grid grid-cols-2 p-4 h-screen">
  <div
    id="editor"
    class="border border-solid border-gray-400 h-full rounded [&>div]:h-full [&>div]:p-2"
    data-id={id}
  >
  </div>
  <div id="preview" class="p-2"></div>
</div>
<script>
  import { Editor } from "@tiptap/core";
  import { Text } from "@tiptap/extension-text";
  import { Document } from "@tiptap/extension-document";
  import { Paragraph } from "@tiptap/extension-paragraph";
  import { HocuspocusProvider } from "@hocuspocus/provider";
  import * as Y from "yjs";
  import { Collaboration } from "@tiptap/extension-collaboration";
  import Page from "lib/Page";

  const editorEl = document.getElementById("editor")!;

  const doc = new Y.Doc();

  const id = editorEl.getAttribute("data-id")!;

  const provider = new HocuspocusProvider({
    url: "ws://127.0.0.1:1234",
    name: id,
    document: doc,
  });

  const page = new Page(id, "");

  new Editor({
    element: editorEl,
    extensions: [
      Document,
      Paragraph,
      Text,
      Collaboration.configure({
        document: doc,
      }),
    ],
    onUpdate: ({ editor }) => {
      const el = document.getElementById("preview");
      if (el) {
        page.onUpdate(editor.getText());
        el.innerHTML = editor.getText();
      }
    },
  });
</script>
